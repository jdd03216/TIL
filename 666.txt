rails g controller home index create
>>>홈안에 인덱스 크리에이트의 액션이 생긴다.

<hr></hr>
>>>헤드라인이 생긴다.

CeateReadUpdateDestory

베쉬에
rails generate model post
>>rails g model post
>>>post는 이름을 바꿀 수 있따.
>>>but 모델명은 항상 단수로 써야 한다.

post = ok 
posts = no!

>>>cuz 데이터베이스 안에서 심블화 할때 복수로 바뀌기 때문에

>>db폴더 안 migrate 폴더에 데이터베이스가 생긴다

>>각 장에 생기는데 그 테이블에 쓰고 싶은 것을 기입한다.
>>ex) t.string :db_title
               >>>>>>t. 에서는 꼭 t로 시작하는 이름이어야 한다.
               >>>>>>그 뒤에는 꼭 띄어쓰기 하나!

rake db:migrate  ㄴㄴ>>>베쉬에 쓴다.
		 >>>띄어쓰기 ㄴㄴ!
		 >>>데이터베이스에 테이블을 인식시켜 준다.


함수는 @를 안쓰고 마지막 값에서 @를 써 주기만 하면 된다.

콘트롤러에 new_post = Post.new를 쓴다.
>>>Post는 꼭 rails generate model post 과 같은 이름이어야 하지만 첫 글지는 꼭 대문자!


new_post = Post.new
new_post.db_title = @my_title
>>>데이터베이스에서 출력해준 것 

new_post.save  >>저장한다

redirect_to "/page_3"  >>갈곳을 알려준다.
		       >>이 액션은 데이터베이스를 저장하는 곳이 된다. 누르면 크리에이트가 아닌 페이지3으로 간다.

def read(page_3)
@every_post = Post.all >>>이리로 다 가져오겠다.
end

페이지3의 에이치티엠
<% @every_post.each do |x| %>  >>>출력이 필요없는 것은 =를 쓰지 않는다.
    <h2>제목 : <%= x.db_title %> </h2>
    <h2>내용 : <%= x.db_content %></h2>
<%= end %>

작성시간 : <%@created_at%>

@every_post = Post.all.reverse 
>>>이렇게 하면 새로운게 위에 출력된다.






































<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>


<div class="container">
<form action="/create" method="GET">
    <h1>게시판을 써 보세요.</h1>
  <div class="form-group" >
    <label for="exampleInputEmail1">제목</label>
    <input name="title" type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="제목이여">
  </div>
  
  <div class="form-group">
    <label for="exampleTextarea">내용</label>
    <textarea name="content" class="form-control" id="exampleTextarea" rows="20" placeholder="내용이여"></textarea>
  </div>

  <button type="submit" class="btn btn-primary">제출</button>
</form>
</div>


